// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlatformDemo.Data;

#nullable disable

namespace PlatformDemo.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241010102107_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlatformDemo.Data.Entities.ServicePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfPurchase")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ServicePlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfPurchase = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            DateOfPurchase = new DateTime(2023, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            DateOfPurchase = new DateTime(2023, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            DateOfPurchase = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            DateOfPurchase = new DateTime(2023, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PlatformDemo.Data.Entities.Timesheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServicePlanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ServicePlanId");

                    b.ToTable("Timesheets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Initial consultation",
                            EndDateTime = new DateTime(2023, 1, 16, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            ServicePlanId = 1,
                            StartDateTime = new DateTime(2023, 1, 16, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Project kickoff",
                            EndDateTime = new DateTime(2023, 1, 17, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            ServicePlanId = 1,
                            StartDateTime = new DateTime(2023, 1, 17, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Requirements gathering",
                            EndDateTime = new DateTime(2023, 2, 11, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            ServicePlanId = 2,
                            StartDateTime = new DateTime(2023, 2, 11, 9, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Design discussion",
                            EndDateTime = new DateTime(2023, 2, 12, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            ServicePlanId = 2,
                            StartDateTime = new DateTime(2023, 2, 12, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Description = "Development sprint",
                            EndDateTime = new DateTime(2023, 3, 21, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            ServicePlanId = 3,
                            StartDateTime = new DateTime(2023, 3, 21, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Description = "Code review",
                            EndDateTime = new DateTime(2023, 3, 22, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            ServicePlanId = 3,
                            StartDateTime = new DateTime(2023, 3, 22, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PlatformDemo.Data.Entities.Timesheet", b =>
                {
                    b.HasOne("PlatformDemo.Data.Entities.ServicePlan", "ServicePlan")
                        .WithMany("Timesheets")
                        .HasForeignKey("ServicePlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServicePlan");
                });

            modelBuilder.Entity("PlatformDemo.Data.Entities.ServicePlan", b =>
                {
                    b.Navigation("Timesheets");
                });
#pragma warning restore 612, 618
        }
    }
}
